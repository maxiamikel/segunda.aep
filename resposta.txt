    
N.B: Conteudo suministrado no livro COMO PROGRAMAR COM JAVA DE Paul Deitel

1
O conceito de encapsulamento consiste em esconder os atributos da classe quen for utilizá-la. Isso deve por dois motivos principais:
Uma é para alguém que for usar a classe não a use de forma errada,como, por exemplo, em uma classe que tem um método de divisão entre dos atributos da classe se o programador nçao conhece a imoplementação interna da classe, ele pode colocar o valor zero no atributo do dividendo, mas se a classe estiver corretamente encapsulada podemos impedir que o programador faça isso. Esse tipo de implementação é feito via os métodos set e get.

Por exemplo:

public class Produtos {
	private String codProduto;
	private String nomeProduto;
	public Produtos(){
	}
	}
Na sequência, private String codProdutos e private String nomeProduto respetivamente criar 2 atributos de tipo String da classe produtos que seram visiveis somenta aos métodos nativos dessa classe.
	
O outro motivo é de manter todo o código de uma determinada classe encapsulada dentro dela mesmo, por exemplo, se existe uma classe Conta, talvez seja melhor não permitir que um programador acesse o atributo saldo diretamente, nem mesmo com os metodos get e set , mas somente por operações, como saque, depósito e saldo.


2 
Savendo que em programação orientada a objeto, o encapsulamento é um conceito que dá sentido ao processo de personalização e a possibilidade da reutilização dos códigos de uma classe previamente definida. Em conjunto com os métodos modificadores, setters por exemplo, que tem como função principal de alterar o estado ou o valor dos atributos da classe; então cada ves que criamos um novo objeto de essa classe, nós facilita a obtenção de novos valores para os atributos da classe que ao intanciar-la.

  Por exemplo
  
  public class Produtos {
	private double preco;
	public Produtos(){
	}
	
	public void setPreco() {
		this.preco = preco;
	}
	public double getPreco() {
		return preco;
	}
	
	}
Os atributos e métodos de uma classe estão relacionados. Os objetos podem secomunicar entre si, mas eles em geral não sabem como outros objetos são implementados. Os detalhes de implementação premanecem ocultos dentro dos propios objetos.

No ezemplo anterior, o método setter da linha 28 até a lihna 30 modifica o valor ou estado da variável preco, e o método setter da linha 31 até 33 permite acessar e obter o valor encapsulado nessa variável para cada novo objeto criado apartir dessa classe.
	

